{{#operations}}
class {{classname}}:

    def __init__(self, client=None):
        self.client = client

{{#operation}}
    def {{operationId}}(self, {{#pathParams}}{{paramName}}, {{/pathParams}}params=None, **options):
        """{{#summary}}{{{.}}}{{/summary}}{{^summary}}{{operationId}}{{/summary}}
        {{#pathParams}}
        :param {{dataType}} {{paramName}}:{{#required}} (required){{/required}}{{#optional}}(optional){{/optional}}{{#description}} {{{description}}}{{/description}}
        {{/pathParams}}
        :param Object params: Parameters for the request{{#queryParams}}{{#neq baseName 'opt_pretty' 'opt_fields' 'offset' 'limit'}}
            - {{paramName}} { {{~dataType~}} }: {{#required}} (required){{/required}}{{#optional}}(optional){{/optional}}{{#description}} {{{description}}}{{/description}}{{/neq}}{{/queryParams}}
        :param **options{{#queryParams}}{{#eq baseName 'opt_pretty' 'opt_fields' 'offset' 'limit'}}
            - {{paramName}} { {{~dataType~}} }: {{#required}} (required){{/required}}{{#optional}}(optional){{/optional}}{{#description}} {{{description}}}{{/description}}{{/eq}}{{/queryParams}}
        :return: Object
        """

        if params is None:
            params = {}
        path = "{{path}}"{{#pathParams}}.replace("{ {{~baseName~}} }", {{paramName}}){{/pathParams}}
        {{#eq httpMethod.toLowerCase "get"}}
        {{#pathParams}}
        return self.client.{{httpMethod.toLowerCase}}(path, params, **options)
        {{/pathParams}}
        {{^pathParams}}
        return self.client.get_collection(path, params, **options)
        {{/pathParams}}
        {{/eq}}
        {{#neq httpMethod.toLowerCase "get"}}
        return self.client.{{httpMethod.toLowerCase}}(path, params, **options)
        {{/neq}}

        
{{/operation}}
{{/operations}}
